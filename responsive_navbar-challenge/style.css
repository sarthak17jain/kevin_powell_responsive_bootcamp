/* Challenge

   Make the navigation layout work
   on both mobile and large screens.

   Mobile-first, so mobile styles first,
   then add the large screen styles
   inside the existing media query

*/

*, *::before, *::after {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1.3rem;
}

img {
    max-width: 100%;
}

h1 {
    font-size: 3rem;
    margin-top: 0;
}

.section-title {
    color: #87629A;
}

.btn {
    display: inline-block;
    text-decoration: none;
    text-transform: uppercase; 
    color: #23424A;
    font-weight: 900;
    background-color: #38CFD9;
    padding: .75em 2em;
    border-radius: 100px;
}

.btn:hover,
.btn:focus {
    opacity: .75; 
}

.container {
    width: 80%;
    max-width: 1100px;
    margin: 0 auto;
    /* added for nav-toggle positioning */
    position: relative;
}

header {
    background: #136c72;
    padding: 1em 0;
    text-align: center;
}

.nav-toggle {
    cursor: pointer;
    border: 0;
    width: 3em;
    height: 3em;
    padding: 0em;
    border-radius: 50%;
    background: #072A2D;
    color: white;
    transition: opacity 250ms ease;
    
    position: absolute;
    left: 0;
}

.nav-toggle:focus,
.nav-toggle:hover {
    opacity: .75;
}

/* items inside a button are automatically vertically centered */
.hamburger {
    width: 50%;
    position: relative;
}
/* div cannot reside inside a button(HTML rule)
   therefore, we use span 
   for span to occupy 100% of available width and to stack vertically
   use display: block;
*/
.hamburger,
.hamburger::before,
.hamburger::after {
    display: block;
    margin: 0 auto;
    height: 3px;
    background: white;
}

.hamburger::before,
.hamburger::after {
    content: '';
    width: 100%;
}

.hamburger::before {
    transform: translateY(-6px);
}

.hamburger::after {
    transform: translateY(3px);
}

/* made changes here from video
   to make it more accessible.
   
   Works the same :) */
.nav {
    visibility: hidden;
    /* display: none; */
    height: 0;
    position: absolute;
}

.nav--visible {
    width: 100%;
    visibility: visible;
    /* display:block; */
    height: auto;
    position: relative;
    font-size: 1rem;
} 

.nav__list{
    padding: 0;
    margin: 0;
    list-style: none;
}
.nav__list--primary{
    margin-bottom: 2em;
}
.nav__item{
    margin-top: 0.75em;
}
.nav__link{
    color: white;
    text-transform: uppercase;
    text-decoration: none;
}
.nav__link:hover, .nav__link:focus{
    opacity: .65;
}
.nav__link--button{
    padding: 0.25em 0.75em;
    background-color: #fff;
    color: #23424A;
    border-radius: 100px;
}


.logo {
    height: 30px;
}

.hero {
    padding: 100px 0;
    background-color: #23424A;
    color: #FFF;
}

.hero__img {
    margin-top: 2em;
}


.hero p {
    margin-bottom: 3em;
}

.main {
    margin-top: 3em;
}


.sidebar {
    padding: 1em;
    text-align: center;
    color: #fff;
    background-color: #136c72;

}



@media (min-width: 800px) {
    .nav-toggle {
        display: none;
    }

    .nav {
        visibility: visible;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        height: auto;
        /* Change the earlier position of absolute we applied because of dropdown.
           Otherwise it will overlap with other elements as it comes out of the flow of the document*/
        position: relative;
    }
    .nav__list{
        display: flex;
        margin: 0;
    }
    .nav__item{
        margin: 0 0 0 1.5em;
    }
    
    .row {
        display: flex;
        justify-content: space-between;

    }

    .hero__text {
        width: 62%;
    }
    
    .hero__img {
        width: 32%;
        align-self: flex-start;
        margin: 0;
    }
    
    .primary-content {
        width: 62%;
    }

    .sidebar {
        width: 32%;
    }

}